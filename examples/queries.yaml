queries:
  - query: count(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_total

  - query: max(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_max

  - query: min(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_min

  - query: avg(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_avg

  - query: counterAsRate(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_rate

  - query: range(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_range

  - query: stdDev(field=status)
    repo: humio
    interval: 30m
    metric_name: humio_status_stddev

  - query: sum(status)
    repo: humio
    interval: 30m
    metric_name: humio_status_sum
    metric_labels:
      - key: squad
        value: foo

  - query: eventSize() | groupBy("k8s.labels.app", function=sum(_eventSize, as="value"))
    # Results in a table like this:
    # | k8s.labels.app | value |
    # |----------------|-------|
    # | foo            | 100   |
    # | bar            | 200   |
    repo: humio
    interval: 1h
    metric_name: log_ingest_bytes
    metric_labels:
    - key: app
      valueFromTable: k8s.labels.app
    # This will result in the following metric:
    # log_ingest_bytes{app="foo", interval="1h", repo="humio"} 100
    # log_ingest_bytes{app="bar", interval="1h", repo="humio"} 200
